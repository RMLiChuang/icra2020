// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inflation_layer_setting.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "inflation_layer_setting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace roborts_costmap {

namespace {

const ::google::protobuf::Descriptor* ParaInflationLayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParaInflationLayer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_inflation_5flayer_5fsetting_2eproto() {
  protobuf_AddDesc_inflation_5flayer_5fsetting_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "inflation_layer_setting.proto");
  GOOGLE_CHECK(file != NULL);
  ParaInflationLayer_descriptor_ = file->message_type(0);
  static const int ParaInflationLayer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaInflationLayer, inflation_radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaInflationLayer, cost_scaling_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaInflationLayer, is_debug_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaInflationLayer, is_raw_rosmessage_),
  };
  ParaInflationLayer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ParaInflationLayer_descriptor_,
      ParaInflationLayer::default_instance_,
      ParaInflationLayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaInflationLayer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParaInflationLayer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ParaInflationLayer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_inflation_5flayer_5fsetting_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ParaInflationLayer_descriptor_, &ParaInflationLayer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_inflation_5flayer_5fsetting_2eproto() {
  delete ParaInflationLayer::default_instance_;
  delete ParaInflationLayer_reflection_;
}

void protobuf_AddDesc_inflation_5flayer_5fsetting_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035inflation_layer_setting.proto\022\017roborts"
    "_costmap\"x\n\022ParaInflationLayer\022\030\n\020inflat"
    "ion_radius\030\001 \002(\001\022\033\n\023cost_scaling_factor\030"
    "\002 \002(\001\022\020\n\010is_debug\030\003 \002(\010\022\031\n\021is_raw_rosmes"
    "sage\030\004 \002(\010", 170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inflation_layer_setting.proto", &protobuf_RegisterTypes);
  ParaInflationLayer::default_instance_ = new ParaInflationLayer();
  ParaInflationLayer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_inflation_5flayer_5fsetting_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_inflation_5flayer_5fsetting_2eproto {
  StaticDescriptorInitializer_inflation_5flayer_5fsetting_2eproto() {
    protobuf_AddDesc_inflation_5flayer_5fsetting_2eproto();
  }
} static_descriptor_initializer_inflation_5flayer_5fsetting_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ParaInflationLayer::kInflationRadiusFieldNumber;
const int ParaInflationLayer::kCostScalingFactorFieldNumber;
const int ParaInflationLayer::kIsDebugFieldNumber;
const int ParaInflationLayer::kIsRawRosmessageFieldNumber;
#endif  // !_MSC_VER

ParaInflationLayer::ParaInflationLayer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.ParaInflationLayer)
}

void ParaInflationLayer::InitAsDefaultInstance() {
}

ParaInflationLayer::ParaInflationLayer(const ParaInflationLayer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.ParaInflationLayer)
}

void ParaInflationLayer::SharedCtor() {
  _cached_size_ = 0;
  inflation_radius_ = 0;
  cost_scaling_factor_ = 0;
  is_debug_ = false;
  is_raw_rosmessage_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParaInflationLayer::~ParaInflationLayer() {
  // @@protoc_insertion_point(destructor:roborts_costmap.ParaInflationLayer)
  SharedDtor();
}

void ParaInflationLayer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ParaInflationLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParaInflationLayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParaInflationLayer_descriptor_;
}

const ParaInflationLayer& ParaInflationLayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inflation_5flayer_5fsetting_2eproto();
  return *default_instance_;
}

ParaInflationLayer* ParaInflationLayer::default_instance_ = NULL;

ParaInflationLayer* ParaInflationLayer::New() const {
  return new ParaInflationLayer;
}

void ParaInflationLayer::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ParaInflationLayer*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(inflation_radius_, is_raw_rosmessage_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ParaInflationLayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.ParaInflationLayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double inflation_radius = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &inflation_radius_)));
          set_has_inflation_radius();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_cost_scaling_factor;
        break;
      }

      // required double cost_scaling_factor = 2;
      case 2: {
        if (tag == 17) {
         parse_cost_scaling_factor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_scaling_factor_)));
          set_has_cost_scaling_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_debug;
        break;
      }

      // required bool is_debug = 3;
      case 3: {
        if (tag == 24) {
         parse_is_debug:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
          set_has_is_debug();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_is_raw_rosmessage;
        break;
      }

      // required bool is_raw_rosmessage = 4;
      case 4: {
        if (tag == 32) {
         parse_is_raw_rosmessage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_raw_rosmessage_)));
          set_has_is_raw_rosmessage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.ParaInflationLayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.ParaInflationLayer)
  return false;
#undef DO_
}

void ParaInflationLayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.ParaInflationLayer)
  // required double inflation_radius = 1;
  if (has_inflation_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->inflation_radius(), output);
  }

  // required double cost_scaling_factor = 2;
  if (has_cost_scaling_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->cost_scaling_factor(), output);
  }

  // required bool is_debug = 3;
  if (has_is_debug()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_debug(), output);
  }

  // required bool is_raw_rosmessage = 4;
  if (has_is_raw_rosmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_raw_rosmessage(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.ParaInflationLayer)
}

::google::protobuf::uint8* ParaInflationLayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.ParaInflationLayer)
  // required double inflation_radius = 1;
  if (has_inflation_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->inflation_radius(), target);
  }

  // required double cost_scaling_factor = 2;
  if (has_cost_scaling_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->cost_scaling_factor(), target);
  }

  // required bool is_debug = 3;
  if (has_is_debug()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_debug(), target);
  }

  // required bool is_raw_rosmessage = 4;
  if (has_is_raw_rosmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_raw_rosmessage(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.ParaInflationLayer)
  return target;
}

int ParaInflationLayer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double inflation_radius = 1;
    if (has_inflation_radius()) {
      total_size += 1 + 8;
    }

    // required double cost_scaling_factor = 2;
    if (has_cost_scaling_factor()) {
      total_size += 1 + 8;
    }

    // required bool is_debug = 3;
    if (has_is_debug()) {
      total_size += 1 + 1;
    }

    // required bool is_raw_rosmessage = 4;
    if (has_is_raw_rosmessage()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParaInflationLayer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ParaInflationLayer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ParaInflationLayer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParaInflationLayer::MergeFrom(const ParaInflationLayer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inflation_radius()) {
      set_inflation_radius(from.inflation_radius());
    }
    if (from.has_cost_scaling_factor()) {
      set_cost_scaling_factor(from.cost_scaling_factor());
    }
    if (from.has_is_debug()) {
      set_is_debug(from.is_debug());
    }
    if (from.has_is_raw_rosmessage()) {
      set_is_raw_rosmessage(from.is_raw_rosmessage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ParaInflationLayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaInflationLayer::CopyFrom(const ParaInflationLayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaInflationLayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ParaInflationLayer::Swap(ParaInflationLayer* other) {
  if (other != this) {
    std::swap(inflation_radius_, other->inflation_radius_);
    std::swap(cost_scaling_factor_, other->cost_scaling_factor_);
    std::swap(is_debug_, other->is_debug_);
    std::swap(is_raw_rosmessage_, other->is_raw_rosmessage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ParaInflationLayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParaInflationLayer_descriptor_;
  metadata.reflection = ParaInflationLayer_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace roborts_costmap

// @@protoc_insertion_point(global_scope)
